/**
 * Definition for a point.
 * struct Point {
 *     int x;
 *     int y;
 *     Point() : x(0), y(0) {}
 *     Point(int a, int b) : x(a), y(b) {}
 * };
 */
class Solution {
public:
    int maxPoints(vector<Point> &points) {
        if(points.size()<3) return points.size();
        int ret=0;
       
        for(int i=0;i<points.size();i++)
        {
             map<double,int> count;
            int curMax=1;
            int numDup=0;
            int numVer=0;
           for(int j=0;j<points.size();j++)
           {
               if(j!=i)
               {
                   double dx=points[i].x-points[j].x;
                   double dy=points[i].y-points[j].y;
                   if(dx==0&&dy==0)
                   {
                           numDup++;
                   }
                   else if(dx==0)
                   {
                       if(numVer==0){
                           numVer=2;
                       }else{
                           numVer++;
                       }
                       curMax=max(numVer,curMax);
                   }
                   else
                   {
                       double k=dy/dx;
                       if(count[k]==0){
                           count[k]=2;
                       }else{
                           count[k]++;
                       }
                       curMax=max(count[k],curMax);
                   }
               }
           }
            ret=max(ret,curMax+numDup);
        }
        return ret;
    }
};
